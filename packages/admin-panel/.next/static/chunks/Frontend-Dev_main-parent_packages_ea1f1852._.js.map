{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/api-client/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createApiClient = createApiClient;\nfunction createApiClient(baseUrl, getToken) {\n    const request = async (method, endpoint, options = {}) => {\n        // ... منطق داخلی request بدون تغییر باقی می‌ماند ...\n        const { params, body, headers = {} } = options;\n        const query = params ? `?${new URLSearchParams(params).toString()}` : '';\n        const url = `${baseUrl}/${endpoint}${query}`;\n        const token = getToken === null || getToken === void 0 ? void 0 : getToken();\n        const isFormData = body instanceof FormData;\n        const finalHeaders = Object.assign(Object.assign(Object.assign({}, (isFormData ? {} : { 'Content-Type': 'application/json' })), (token ? { Authorization: `Bearer ${token}` } : {})), headers);\n        const response = await fetch(url, {\n            method,\n            headers: finalHeaders,\n            body: method !== 'GET' && body ? (isFormData ? body : JSON.stringify(body)) : undefined,\n        });\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({ message: response.statusText }));\n            throw new Error(errorData.message || `Request failed with status ${response.status}`);\n        }\n        if (response.status === 204)\n            return null;\n        return response.json();\n    };\n    // ✨ --- تغییرات کلیدی در اینجا هستند ---\n    return {\n        get: (endpoint, options) => request('GET', endpoint, options),\n        post: (endpoint, options) => request('POST', endpoint, options),\n        put: (endpoint, options) => request('PUT', endpoint, options),\n        delete: (endpoint, options) => request('DELETE', endpoint, options),\n    };\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG;AAC1B,SAAS,gBAAgB,OAAO,EAAE,QAAQ;IACtC,MAAM,UAAU,eAAO,QAAQ;YAAU,2EAAU,CAAC;QAChD,qDAAqD;QACrD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG;QACvC,MAAM,QAAQ,SAAS,AAAC,IAA0C,OAAvC,IAAI,gBAAgB,QAAQ,QAAQ,MAAO;QACtE,MAAM,MAAM,AAAC,GAAa,OAAX,SAAQ,KAAc,OAAX,UAAiB,OAAN;QACrC,MAAM,QAAQ,aAAa,QAAQ,aAAa,KAAK,IAAI,KAAK,IAAI;QAClE,MAAM,aAAa,gBAAgB;QACnC,MAAM,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAI,aAAa,CAAC,IAAI;YAAE,gBAAgB;QAAmB,IAAM,QAAQ;YAAE,eAAe,AAAC,UAAe,OAAN;QAAQ,IAAI,CAAC,IAAK;QACtL,MAAM,WAAW,MAAM,MAAM,KAAK;YAC9B;YACA,SAAS;YACT,MAAM,WAAW,SAAS,OAAQ,aAAa,OAAO,KAAK,SAAS,CAAC,QAAS;QAClF;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;oBAAE,SAAS,SAAS,UAAU;gBAAC,CAAC;YACrF,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI,AAAC,8BAA6C,OAAhB,SAAS,MAAM;QACtF;QACA,IAAI,SAAS,MAAM,KAAK,KACpB,OAAO;QACX,OAAO,SAAS,IAAI;IACxB;IACA,yCAAyC;IACzC,OAAO;QACH,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,MAAM,CAAC,UAAU,UAAY,QAAQ,QAAQ,UAAU;QACvD,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,QAAQ,CAAC,UAAU,UAAY,QAAQ,UAAU,UAAU;IAC/D;AACJ","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/services/apiClient.ts"],"sourcesContent":["// ۱. وارد کردن تابع createApiClient از پکیج جدیدی که ساختیم\r\nimport { createApiClient } from \"@my-app/api-client\";\r\n\r\n// ۲. تعریف یک تابع برای خواندن توکن احراز هویت\r\n// این تابع مختص اپلیکیشن شماست و می‌تواند در آینده پیچیده‌تر شود\r\nconst getToken = (): string | null => {\r\n  // در یک اپلیکیشن واقعی، توکن از localStorage، sessionStorage یا یک cookie خوانده می‌شود.\r\n  // برای تست، ما می‌توانیم توکن را به صورت ثابت برگردانیم.\r\n  // مطمئن شوید که این توکن معتبر و منقضی نشده باشد.\r\n  if (typeof window !== 'undefined') {\r\n    // مثال: return localStorage.getItem('authToken');\r\n  }\r\n  \r\n  // توکن نمونه شما:\r\n  return \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiI2NTI3MzA1ZS1kYWZiLTRjZjEtYmMyOC1kMTViN2I0ODhjYzUiLCJuYmYiOjE3NTYxOTk1MDMsImV4cCI6MTc2NjE5OTQwMywiaXNzIjoiWWFkYWtjaGkiLCJhdWQiOiJmcm9udC5sb3R0ZXN0LmlyIn0.cnraf4kqlf_imZuhFg6GXoZ3RCJcHIqELJo3vU6VbDPScochuCz1mvLDogc2bJAc32e4Khikd2G08CyTLcDKiQ\";\r\n};\r\n\r\n// ۳. ایجاد یک نمونه (instance) از کلاینت API با استفاده از متغیر محیطی\r\n//    ما از /api/ به عنوان baseUrl استفاده می‌کنیم تا درخواست‌ها به پروکسی Next.js ارسال شوند\r\nconst apiClient = createApiClient(\r\n  '/api', // این آدرس به rewrites در next.config.js اشاره می‌کند\r\n  getToken\r\n);\r\n\r\n// ۴. export کردن نمونه برای استفاده در سراسر اپلیکیشن\r\nexport default apiClient;"],"names":[],"mappings":"AAAA,4DAA4D;;;;;AAC5D;;AAEA,+CAA+C;AAC/C,iEAAiE;AACjE,MAAM,WAAW;IACf,yFAAyF;IACzF,yDAAyD;IACzD,kDAAkD;IAClD,IAAI,aAAkB,aAAa;IACjC,kDAAkD;IACpD;IAEA,kBAAkB;IAClB,OAAO;AACT;AAEA,uEAAuE;AACvE,6FAA6F;AAC7F,MAAM,YAAY,IAAA,qMAAe,EAC/B,QACA;uCAIa","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/services/shopsService.ts"],"sourcesContent":["import apiClient from \"./apiClient\";\r\n\r\nexport interface Shop {\r\n  id: string;\r\n  name: string;\r\n  lastname: string;\r\n  shopTitle: string;\r\n  phoneNumber: string | null;\r\n  description: string;\r\n  website: string;\r\n  tell: string;\r\n  status: string;\r\n  registrationStatus: \"Confirmed\" | \"InProgress\" | \"Answered\" | \"Rejected\";\r\n  createDate: string;\r\n  updateDate: string;\r\n  logo: string | null;\r\n  isLogoConfirmed: boolean;\r\n  isShopTitleConfirmed: boolean;\r\n  isTellConfirmed: boolean;\r\n  businessLicense: string | null;\r\n  nationalCard: string | null;\r\n  behindNationalCard: string | null;\r\n  isBusinessLicenseConfirmed: boolean;\r\n  isNationalCardConfirmed: boolean;\r\n  isBehindNationalCardConfirmed: boolean;\r\n  isBanned?: boolean;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  pageSize: number;\r\n  totalCount: number;\r\n  items: T[];\r\n}\r\n\r\nexport type ShopConfirmationData = {\r\n  ShopId: string;\r\n  IsLogoConfirmed?: boolean;\r\n  IsShopTitleConfirmed?: boolean;\r\n  IsBusinessLicenseConfirmed?: boolean;\r\n  IsNationalCardConfirmed?: boolean;\r\n  IsBehindNationalCardConfirmed?: boolean;\r\n  IsTellConfirmed?: boolean;\r\n};\r\n\r\n/**\r\n * لیستی از فروشگاه‌ها را واکشی می‌کند.\r\n */\r\nexport const getShops = (\r\n  pageNumber: number, \r\n  pageSize: number\r\n): Promise<PaginatedResponse<Shop>> => {\r\n  return apiClient.get('A_Shop/GetShops', {\r\n    params: {\r\n      PageNumber: pageNumber,\r\n      PageSize: pageSize,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * اطلاعات یک فروشگاه خاص را واکشی می‌کند.\r\n */\r\nexport const getShopById = (shopId: string): Promise<Shop> => {\r\n  return apiClient.get('A_Shop/GetShopDetail', {\r\n    params: {\r\n      Id: shopId,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * وضعیت تایید مدارک یک فروشگاه را به‌روز می‌کند.\r\n */\r\nexport const confirmShopRegistration = (confirmationData: ShopConfirmationData): Promise<Shop> => {\r\n  const formData = new FormData();\r\n  Object.keys(confirmationData).forEach((key: any) => {\r\n    const value = confirmationData[key as keyof ShopConfirmationData];\r\n    if (value !== undefined) {\r\n      formData.append(key, String(value));\r\n    }\r\n  });\r\n  return apiClient.put('A_Shop/ShopConfirmRegistration', {\r\n    body: formData,\r\n  });\r\n};\r\n\r\n/**\r\n * وضعیت نهایی یک فروشگاه را به 'Confirmed' تغییر می‌دهد.\r\n * @param shopId شناسه فروشگاه\r\n * @returns یک Promise که به آبجکت به‌روز شده Shop حل می‌شود.\r\n */\r\nexport const confirmFinalShopStatus = (shopId: string): Promise<Shop> => {\r\n  return apiClient.put('A_Shop/ConfirmShop', {\r\n    params: {\r\n      ShopId: shopId,\r\n      Status: 'Confirmed',\r\n    }\r\n  });\r\n};"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAkDO,MAAM,WAAW,CACtB,YACA;IAEA,OAAO,6MAAS,CAAC,GAAG,CAAC,mBAAmB;QACtC,QAAQ;YACN,YAAY;YACZ,UAAU;QACZ;IACF;AACF;AAKO,MAAM,cAAc,CAAC;IAC1B,OAAO,6MAAS,CAAC,GAAG,CAAC,wBAAwB;QAC3C,QAAQ;YACN,IAAI;QACN;IACF;AACF;AAKO,MAAM,0BAA0B,CAAC;IACtC,MAAM,WAAW,IAAI;IACrB,OAAO,IAAI,CAAC,kBAAkB,OAAO,CAAC,CAAC;QACrC,MAAM,QAAQ,gBAAgB,CAAC,IAAkC;QACjE,IAAI,UAAU,WAAW;YACvB,SAAS,MAAM,CAAC,KAAK,OAAO;QAC9B;IACF;IACA,OAAO,6MAAS,CAAC,GAAG,CAAC,kCAAkC;QACrD,MAAM;IACR;AACF;AAOO,MAAM,yBAAyB,CAAC;IACrC,OAAO,6MAAS,CAAC,GAAG,CAAC,sBAAsB;QACzC,QAAQ;YACN,QAAQ;YACR,QAAQ;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/utils/translations.ts"],"sourcesContent":["// ۱. تایپ StatusKey را با مقادیر جدید به‌روز می‌کنیم\r\nexport type StatusKey = \r\n  'Confirmed' | \r\n  'InProgress' | \r\n  'Answered' | \r\n  'Rejected' | \r\n  'Pending' | \r\n  'Ok' | \r\n  string;\r\n\r\n// ۲. دیکشنری ترجمه‌ها را با مقادیر جدید کامل می‌کنیم\r\nconst statusTranslations: Record<StatusKey, string> = {\r\n  // وضعیت‌های فروشگاه\r\n  'Confirmed': 'تایید شده',\r\n  'Pending': 'در انتظار بررسی',\r\n  'Rejected': 'رد شده',\r\n  'Ok': 'موفق',\r\n  \r\n  // ✨ --- وضعیت‌های جدید اضافه شدند ---\r\n  'InProgress': 'در حال بررسی',\r\n  'Answered': 'پاسخ داده شده',\r\n};\r\n\r\n/**\r\n * یک کلید وضعیت (مانند 'Confirmed') را می‌گیرد و معادل فارسی آن را برمی‌گرداند.\r\n * اگر ترجمه‌ای پیدا نشود، خود کلید را برمی‌گرداند.\r\n * @param status - کلید وضعیت برای ترجمه\r\n * @returns رشته ترجمه شده\r\n */\r\nexport const translateStatus = (status: StatusKey): string => {\r\n  return statusTranslations[status] || status;\r\n};"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAUrD,qDAAqD;AACrD,MAAM,qBAAgD;IACpD,oBAAoB;IACpB,aAAa;IACb,WAAW;IACX,YAAY;IACZ,MAAM;IAEN,sCAAsC;IACtC,cAAc;IACd,YAAY;AACd;AAQO,MAAM,kBAAkB,CAAC;IAC9B,OAAO,kBAAkB,CAAC,OAAO,IAAI;AACvC","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/utils/exportUtils.ts"],"sourcesContent":["import * as XLSX from 'xlsx';\r\n\r\n/**\r\n * داده‌ها را به یک فایل اکسل تبدیل کرده و دانلود می‌کند.\r\n * @param data آرایه‌ای از آبجکت‌ها برای تبدیل\r\n * @param fileName نام فایل خروجی (بدون پسوند)\r\n * @param sheetName نام شیت داخل فایل اکسل\r\n */\r\nexport const exportToExcel = <T extends {}>(data: T[], fileName: string, sheetName: string = 'Sheet 1'): void => {\r\n  try {\r\n    // ۱. ساخت یک شیت جدید از داده‌های JSON\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n\r\n    // ۲. ساخت یک بوک جدید\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    // ۳. اضافه کردن شیت به بوک\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\r\n\r\n    // ۴. نوشتن (تولید) فایل و شروع دانلود\r\n    XLSX.writeFile(workbook, `${fileName}.xlsx`);\r\n\r\n  } catch (error) {\r\n    console.error(\"خطا در هنگام تولید فایل اکسل:\", error);\r\n    alert(\"متاسفانه در تولید خروجی اکسل خطایی رخ داد.\");\r\n  }\r\n};"],"names":[],"mappings":";;;;AAAA;;AAQO,MAAM,gBAAgB,SAAe,MAAW;QAAkB,6EAAoB;IAC3F,IAAI;QACF,uCAAuC;QACvC,MAAM,YAAY,gOAAU,CAAC,aAAa,CAAC;QAE3C,sBAAsB;QACtB,MAAM,WAAW,gOAAU,CAAC,QAAQ;QAEpC,2BAA2B;QAC3B,gOAAU,CAAC,iBAAiB,CAAC,UAAU,WAAW;QAElD,sCAAsC;QACtC,oOAAc,CAAC,UAAU,AAAC,GAAW,OAAT,UAAS;IAEvC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/config/filters.config.ts"],"sourcesContent":["import { type FilterTab, type SelectOption } from \"@my-ds/design-system\";\r\n\r\n// فیلترهای زمانی مشترک (بدون تغییر)\r\nexport const commonTimeFilters: FilterTab[] = [\r\n  { id: 'newest', label: 'جدیدترین' },\r\n  { id: 'oldest', label: 'قدیمی‌ترین' },\r\n  { id: 'today', label: 'امروز' },\r\n  { id: 'this_week', label: 'این هفته' },\r\n  { id: 'this_month', label: 'این ماه' },\r\n];\r\n\r\n\r\n// فیلترهای وضعیت اختصاصی برای فروشگاه‌ها\r\nexport const shopStatusFilters: SelectOption[] = [\r\n  { value: 'all', label: 'همه وضعیت‌ها' },\r\n  { value: 'Confirmed', label: 'تایید شده' },\r\n  { value: 'InProgress', label: 'در حال بررسی' },\r\n  { value: 'Answered', label: 'پاسخ داده شده' },\r\n  { value: 'Rejected', label: 'رد شده' },\r\n];\r\n\r\n\r\nexport const pageSizeOptions: SelectOption[] = [\r\n  { label: '5', value: 5 },\r\n  { label: '10', value: 10 },\r\n  { label: '20', value: 20 },\r\n  { label: '50', value: 50 },\r\n  { label: '100', value: 100 },\r\n];"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,oBAAiC;IAC5C;QAAE,IAAI;QAAU,OAAO;IAAW;IAClC;QAAE,IAAI;QAAU,OAAO;IAAa;IACpC;QAAE,IAAI;QAAS,OAAO;IAAQ;IAC9B;QAAE,IAAI;QAAa,OAAO;IAAW;IACrC;QAAE,IAAI;QAAc,OAAO;IAAU;CACtC;AAIM,MAAM,oBAAoC;IAC/C;QAAE,OAAO;QAAO,OAAO;IAAe;IACtC;QAAE,OAAO;QAAa,OAAO;IAAY;IACzC;QAAE,OAAO;QAAc,OAAO;IAAe;IAC7C;QAAE,OAAO;QAAY,OAAO;IAAgB;IAC5C;QAAE,OAAO;QAAY,OAAO;IAAS;CACtC;AAGM,MAAM,kBAAkC;IAC7C;QAAE,OAAO;QAAK,OAAO;IAAE;IACvB;QAAE,OAAO;QAAM,OAAO;IAAG;IACzB;QAAE,OAAO;QAAM,OAAO;IAAG;IACzB;QAAE,OAAO;QAAM,OAAO;IAAG;IACzB;QAAE,OAAO;QAAO,OAAO;IAAI;CAC5B","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/app/shops/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect, ReactNode, useCallback } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\n\r\n// ۱. وارد کردن تمام کامپوننت‌ها و تایپ‌های لازم از سیستم طراحی\r\nimport {\r\n  YadakchiAdminLayout,\r\n  ListPageLayout,\r\n  Label,\r\n  FilterTabs,\r\n  Select,\r\n  type ColumnDefinition,\r\n  type SelectOption,\r\n} from \"@my-ds/design-system\";\r\n\r\n// ۲. وارد کردن سرویس API و تایپ‌های مربوط به داده‌ها\r\nimport { getShops, type Shop, type PaginatedResponse } from \"../../services/shopsService\";\r\n\r\n// ۳. وارد کردن ابزارهای کمکی و داده‌های فیلتر\r\nimport { translateStatus } from \"../../utils/translations\";\r\nimport { exportToExcel } from \"../../utils/exportUtils\";\r\nimport { commonTimeFilters, shopStatusFilters, pageSizeOptions } from \"../../config/filters.config\";\r\n\r\nexport default function ShopsPage() {\r\n  // --- State Management ---\r\n  const [shopData, setShopData] = useState<PaginatedResponse<Shop> | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // State های پجینیشن و فیلتر\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [activeTimeFilter, setActiveTimeFilter] = useState('newest');\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n  const renderLink = (href: string, children: ReactNode) => <Link href={href}>{children}</Link>;\r\n\r\n  // --- Data Fetching ---\r\n  // این useEffect به تمام فیلترها و پجینیشن وابسته است\r\n  useEffect(() => {\r\n    const fetchShops = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        // در آینده، می‌توان پارامترهای فیلتر را به getShops پاس داد\r\n        const response = await getShops(currentPage, pageSize);\r\n        setShopData(response);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : \"یک خطای ناشناخته رخ داد.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchShops();\r\n  }, [currentPage, pageSize, activeTimeFilter, selectedStatus, searchTerm]);\r\n\r\n  // --- Handlers ---\r\n  const handleViewShop = (shopId: string) => {\r\n    router.push(`/shops/${shopId}`);\r\n  };\r\n  const handleEditShop = (shopId: string) => alert(`ویرایش: ${shopId}`);\r\n  const handleDeleteShop = (shopId: string) => alert(`حذف: ${shopId}`);\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePageSizeChange = (size: number) => {\r\n    setPageSize(size);\r\n    setCurrentPage(1);\r\n  };\r\n  const handleExport = async () => {\r\n    if (!shopData?.items?.length) {\r\n      alert(\"هیچ داده‌ای برای خروجی گرفتن وجود ندارد.\");\r\n      return;\r\n    }\r\n    setIsExporting(true);\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    const dataToExport = shopData.items.map(shop => ({\r\n      'نام فروشگاه': shop.shopTitle,\r\n      'نام فروشنده': `${shop.name} ${shop.lastname}`,\r\n      'وضعیت': translateStatus(shop.registrationStatus),\r\n      'تاریخ ثبت': new Date(shop.createDate).toLocaleDateString('fa-IR'),\r\n    }));\r\n    exportToExcel(dataToExport, \"لیست_فروشگاه‌ها\");\r\n    setIsExporting(false);\r\n  };\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n  const handleTimeFilterChange = (tabId: string) => {\r\n    setActiveTimeFilter(tabId);\r\n    setCurrentPage(1);\r\n  };\r\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedStatus(event.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // --- Column Definitions ---\r\n  const shopColumns: ColumnDefinition<Shop>[] = [\r\n    { accessorKey: 'shopTitle', header: 'نام فروشگاه', cell: (shop) => <Label text={shop.shopTitle} size=\"md\" /> },\r\n    { accessorKey: 'name', header: 'نام فروشنده', cell: (shop) => <Label text={`${shop.name} ${shop.lastname}`} size=\"md\" /> },\r\n    { accessorKey: 'registrationStatus', header: 'وضعیت', cell: (shop) => ( <Label text={translateStatus(shop.registrationStatus)} size=\"sm\" variant={shop.registrationStatus === 'Confirmed' ? 'primary' : 'error'} /> ) },\r\n    { accessorKey: 'createDate', header: 'تاریخ ثبت', cell: (shop) => <Label text={new Date(shop.createDate).toLocaleDateString('fa-IR')} size=\"md\" /> },\r\n  ];\r\n  \r\n  // --- Props Preparation ---\r\n  const filterSection = (\r\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '1rem', alignItems: 'center' }}>\r\n      <FilterTabs\r\n        tabs={commonTimeFilters}\r\n        activeTab={activeTimeFilter}\r\n        onTabChange={handleTimeFilterChange}\r\n      />\r\n      <Select\r\n        options={shopStatusFilters}\r\n        value={selectedStatus}\r\n        onChange={handleStatusChange}\r\n        aria-label=\"فیلتر بر اساس وضعیت\"\r\n      />\r\n    </div>\r\n  );\r\n  \r\n  const listPageProps = {\r\n    listPageHeaderProps: {\r\n      title: \"لیست فروشگاه‌ها\",\r\n      totalItems: shopData?.totalCount,\r\n      searchInputProps: {\r\n        value: searchTerm,\r\n        onChange: handleSearchChange,\r\n        placeholder: \"جستجو در فروشگاه‌ها...\",\r\n      },\r\n      exportButtonProps: {\r\n        onClick: handleExport,\r\n        isLoading: isExporting,\r\n      },\r\n      actions: <button>افزودن فروشگاه</button> \r\n    },\r\n    tableProps: {\r\n      columns: shopColumns,\r\n      data: shopData?.items || [],\r\n      emptyStateMessage: \"هیچ فروشگاهی یافت نشد.\",\r\n      rowActions: (shop: Shop) => ({\r\n        onView: () => handleViewShop(shop.id),\r\n        onEdit: () => handleEditShop(shop.id),\r\n        onDelete: () => handleDeleteShop(shop.id),\r\n      }),\r\n    },\r\n    paginationProps: {\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalCount: shopData?.totalCount || 0,\r\n      onPageChange: handlePageChange,\r\n      pageSizeOptions: pageSizeOptions,\r\n      onPageSizeChange: handlePageSizeChange,\r\n    },\r\n    filterSection: filterSection,\r\n    isLoading: isLoading,\r\n    error: error,\r\n  };\r\n\r\n  // --- JSX ---\r\n  return (\r\n    <YadakchiAdminLayout\r\n      currentPath={pathname}\r\n      renderLink={renderLink}\r\n    >\r\n      <ListPageLayout {...listPageProps} />\r\n    </YadakchiAdminLayout>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;AAaA,qDAAqD;AACrD;AAEA,8CAA8C;AAC9C;AACA;AACA;;;AAtBA;;;;;;;;;AAwBe,SAAS;;IACtB,2BAA2B;IAC3B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,6TAAQ,EAAiC;IACzE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,6TAAQ,EAAC;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,6TAAQ,EAAC;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,6TAAQ,EAAgB;IAElD,4BAA4B;IAC5B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,6TAAQ,EAAC;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,6TAAQ,EAAC;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,6TAAQ,EAAC;IAC7C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,6TAAQ,EAAC;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,6TAAQ,EAAC;IAErD,MAAM,WAAW,IAAA,wSAAW;IAC5B,MAAM,SAAS,IAAA,sSAAS;IACxB,MAAM,aAAa,CAAC,MAAc,yBAAwB,iVAAC,8TAAI;YAAC,MAAM;sBAAO;;;;;;IAE7E,wBAAwB;IACxB,qDAAqD;IACrD,IAAA,8TAAS;+BAAC;YACR,MAAM;kDAAa;oBACjB,IAAI;wBACF,aAAa;wBACb,SAAS;wBACT,4DAA4D;wBAC5D,MAAM,WAAW,MAAM,IAAA,iNAAQ,EAAC,aAAa;wBAC7C,YAAY;oBACd,EAAE,OAAO,KAAK;wBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;oBAChD,SAAU;wBACR,aAAa;oBACf;gBACF;;YACA;QACF;8BAAG;QAAC;QAAa;QAAU;QAAkB;QAAgB;KAAW;IAExE,mBAAmB;IACnB,MAAM,iBAAiB,CAAC;QACtB,OAAO,IAAI,CAAC,AAAC,UAAgB,OAAP;IACxB;IACA,MAAM,iBAAiB,CAAC,SAAmB,MAAM,AAAC,WAAiB,OAAP;IAC5D,MAAM,mBAAmB,CAAC,SAAmB,MAAM,AAAC,QAAc,OAAP;IAC3D,MAAM,mBAAmB,CAAC;QACxB,eAAe;IACjB;IACA,MAAM,uBAAuB,CAAC;QAC5B,YAAY;QACZ,eAAe;IACjB;IACA,MAAM,eAAe;YACd;QAAL,IAAI,EAAC,qBAAA,gCAAA,kBAAA,SAAU,KAAK,cAAf,sCAAA,gBAAiB,MAAM,GAAE;YAC5B,MAAM;YACN;QACF;QACA,eAAe;QACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,MAAM,eAAe,SAAS,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;gBAC/C,eAAe,KAAK,SAAS;gBAC7B,eAAe,AAAC,GAAe,OAAb,KAAK,IAAI,EAAC,KAAiB,OAAd,KAAK,QAAQ;gBAC5C,SAAS,IAAA,qNAAe,EAAC,KAAK,kBAAkB;gBAChD,aAAa,IAAI,KAAK,KAAK,UAAU,EAAE,kBAAkB,CAAC;YAC5D,CAAC;QACD,IAAA,kNAAa,EAAC,cAAc;QAC5B,eAAe;IACjB;IACA,MAAM,qBAAqB,CAAC;QAC1B,cAAc,MAAM,MAAM,CAAC,KAAK;QAChC,eAAe;IACjB;IACA,MAAM,yBAAyB,CAAC;QAC9B,oBAAoB;QACpB,eAAe;IACjB;IACA,MAAM,qBAAqB,CAAC;QAC1B,kBAAkB,MAAM,MAAM,CAAC,KAAK;QACpC,eAAe;IACjB;IAEA,6BAA6B;IAC7B,MAAM,cAAwC;QAC5C;YAAE,aAAa;YAAa,QAAQ;YAAe,MAAM,CAAC,qBAAS,iVAAC;oBAAM,MAAM,KAAK,SAAS;oBAAE,MAAK;;;;;;QAAQ;QAC7G;YAAE,aAAa;YAAQ,QAAQ;YAAe,MAAM,CAAC,qBAAS,iVAAC;oBAAM,MAAM,AAAC,GAAe,OAAb,KAAK,IAAI,EAAC,KAAiB,OAAd,KAAK,QAAQ;oBAAI,MAAK;;;;;;QAAQ;QACzH;YAAE,aAAa;YAAsB,QAAQ;YAAS,MAAM,CAAC,qBAAW,iVAAC;oBAAM,MAAM,IAAA,qNAAe,EAAC,KAAK,kBAAkB;oBAAG,MAAK;oBAAK,SAAS,KAAK,kBAAkB,KAAK,cAAc,YAAY;;;;;;QAAc;QACtN;YAAE,aAAa;YAAc,QAAQ;YAAa,MAAM,CAAC,qBAAS,iVAAC;oBAAM,MAAM,IAAI,KAAK,KAAK,UAAU,EAAE,kBAAkB,CAAC;oBAAU,MAAK;;;;;;QAAQ;KACpJ;IAED,4BAA4B;IAC5B,MAAM,8BACJ,iVAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,UAAU;YAAQ,KAAK;YAAQ,YAAY;QAAS;;0BACjF,iVAAC;gBACC,MAAM,6NAAiB;gBACvB,WAAW;gBACX,aAAa;;;;;;0BAEf,iVAAC;gBACC,SAAS,6NAAiB;gBAC1B,OAAO;gBACP,UAAU;gBACV,cAAW;;;;;;;;;;;;IAKjB,MAAM,gBAAgB;QACpB,qBAAqB;YACnB,OAAO;YACP,UAAU,EAAE,qBAAA,+BAAA,SAAU,UAAU;YAChC,kBAAkB;gBAChB,OAAO;gBACP,UAAU;gBACV,aAAa;YACf;YACA,mBAAmB;gBACjB,SAAS;gBACT,WAAW;YACb;YACA,uBAAS,iVAAC;0BAAO;;;;;;QACnB;QACA,YAAY;YACV,SAAS;YACT,MAAM,CAAA,qBAAA,+BAAA,SAAU,KAAK,KAAI,EAAE;YAC3B,mBAAmB;YACnB,YAAY,CAAC,OAAe,CAAC;oBAC3B,QAAQ,IAAM,eAAe,KAAK,EAAE;oBACpC,QAAQ,IAAM,eAAe,KAAK,EAAE;oBACpC,UAAU,IAAM,iBAAiB,KAAK,EAAE;gBAC1C,CAAC;QACH;QACA,iBAAiB;YACf,aAAa;YACb,UAAU;YACV,YAAY,CAAA,qBAAA,+BAAA,SAAU,UAAU,KAAI;YACpC,cAAc;YACd,iBAAiB,2NAAe;YAChC,kBAAkB;QACpB;QACA,eAAe;QACf,WAAW;QACX,OAAO;IACT;IAEA,cAAc;IACd,qBACE,iVAAC;QACC,aAAa;QACb,YAAY;kBAEZ,cAAA,iVAAC;YAAgB,GAAG,aAAa;;;;;;;;;;;AAGvC;GAvJwB;;QAcL,wSAAW;QACb,sSAAS;;;KAfF","debugId":null}}]
}