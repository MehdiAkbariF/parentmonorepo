{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/Label/Label.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport \"./Label.scss\";\nexport const Label = ({ text, variant = \"primary\", size = \"md\", icon }) => {\n    return (_jsxs(\"span\", { className: `label label--${variant} label--${size} ${icon ? \"label--with-icon\" : \"\"}`, children: [icon && _jsx(\"span\", { className: \"label__icon\", children: icon }), text] }));\n};\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAEO,MAAM,QAAQ,CAAC,EAAE,IAAI,EAAE,UAAU,SAAS,EAAE,OAAO,IAAI,EAAE,IAAI,EAAE;IAClE,OAAQ,IAAA,mXAAK,EAAC,QAAQ;QAAE,WAAW,CAAC,aAAa,EAAE,QAAQ,QAAQ,EAAE,KAAK,CAAC,EAAE,OAAO,qBAAqB,IAAI;QAAE,UAAU;YAAC,QAAQ,IAAA,kXAAI,EAAC,QAAQ;gBAAE,WAAW;gBAAe,UAAU;YAAK;YAAI;SAAK;IAAC;AACxM","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/ThemeSwitch/ThemeSwitch.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeSwitch = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeSwitch() from the server but ThemeSwitch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend-Dev/main-parent/packages/design-system/dist/atoms/ThemeSwitch/ThemeSwitch.js <module evaluation>\",\n    \"ThemeSwitch\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,4ZAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/ThemeSwitch/ThemeSwitch.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeSwitch = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeSwitch() from the server but ThemeSwitch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend-Dev/main-parent/packages/design-system/dist/atoms/ThemeSwitch/ThemeSwitch.js\",\n    \"ThemeSwitch\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,4ZAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/IconButton/index.js"],"sourcesContent":["// packages/design-system/src/atoms/IconButton/index.ts\nexport * from \"./IconButton\";\n"],"names":[],"mappings":"AAAA,uDAAuD","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/IconButton/IconButton.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const IconButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconButton() from the server but IconButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend-Dev/main-parent/packages/design-system/dist/atoms/IconButton/IconButton.js <module evaluation>\",\n    \"IconButton\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,4ZAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,qHACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/design-system/dist/atoms/IconButton/IconButton.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const IconButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconButton() from the server but IconButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/Frontend-Dev/main-parent/packages/design-system/dist/atoms/IconButton/IconButton.js\",\n    \"IconButton\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,4ZAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,iGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/app/page.tsx"],"sourcesContent":["import { IconButton } from \"@my-ds/design-system\";\nimport {  BackIcon, NotificationIcon } from \"@my-ds/design-system\";\n\n\nexport default function Example() {\n  return (\n    <div style={{ display: \"flex\", gap: \"1rem\" }}>\n      <IconButton icon={<BackIcon />} size=\"md\" variant=\"default\" onClick={() => window.history.back()} />\n      <IconButton icon={<NotificationIcon />} size=\"md\" variant=\"primary\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;AAIe,SAAS;IACtB,qBACE,kYAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,KAAK;QAAO;;0BACzC,kYAAC,gMAAU;gBAAC,oBAAM,kYAAC,8LAAQ;;;;;gBAAK,MAAK;gBAAK,SAAQ;gBAAU,SAAS,IAAM,OAAO,OAAO,CAAC,IAAI;;;;;;0BAC9F,kYAAC,gMAAU;gBAAC,oBAAM,kYAAC,sMAAgB;;;;;gBAAK,MAAK;gBAAK,SAAQ;;;;;;;;;;;;AAGhE","debugId":null}}]
}