{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/api-client/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createApiClient = createApiClient;\nfunction createApiClient(baseUrl, getToken) {\n    const request = async (method, endpoint, options = {}) => {\n        // ... منطق داخلی request بدون تغییر باقی می‌ماند ...\n        const { params, body, headers = {} } = options;\n        const query = params ? `?${new URLSearchParams(params).toString()}` : '';\n        const url = `${baseUrl}/${endpoint}${query}`;\n        const token = getToken === null || getToken === void 0 ? void 0 : getToken();\n        const isFormData = body instanceof FormData;\n        const finalHeaders = Object.assign(Object.assign(Object.assign({}, (isFormData ? {} : { 'Content-Type': 'application/json' })), (token ? { Authorization: `Bearer ${token}` } : {})), headers);\n        const response = await fetch(url, {\n            method,\n            headers: finalHeaders,\n            body: method !== 'GET' && body ? (isFormData ? body : JSON.stringify(body)) : undefined,\n        });\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({ message: response.statusText }));\n            throw new Error(errorData.message || `Request failed with status ${response.status}`);\n        }\n        if (response.status === 204)\n            return null;\n        return response.json();\n    };\n    // ✨ --- تغییرات کلیدی در اینجا هستند ---\n    return {\n        get: (endpoint, options) => request('GET', endpoint, options),\n        post: (endpoint, options) => request('POST', endpoint, options),\n        put: (endpoint, options) => request('PUT', endpoint, options),\n        delete: (endpoint, options) => request('DELETE', endpoint, options),\n    };\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG;AAC1B,SAAS,gBAAgB,OAAO,EAAE,QAAQ;IACtC,MAAM,UAAU,OAAO,QAAQ,UAAU,UAAU,CAAC,CAAC;QACjD,qDAAqD;QACrD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG;QACvC,MAAM,QAAQ,SAAS,CAAC,CAAC,EAAE,IAAI,gBAAgB,QAAQ,QAAQ,IAAI,GAAG;QACtE,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,WAAW,OAAO;QAC5C,MAAM,QAAQ,aAAa,QAAQ,aAAa,KAAK,IAAI,KAAK,IAAI;QAClE,MAAM,aAAa,gBAAgB;QACnC,MAAM,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAI,aAAa,CAAC,IAAI;YAAE,gBAAgB;QAAmB,IAAM,QAAQ;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,IAAI,CAAC,IAAK;QACtL,MAAM,WAAW,MAAM,MAAM,KAAK;YAC9B;YACA,SAAS;YACT,MAAM,WAAW,SAAS,OAAQ,aAAa,OAAO,KAAK,SAAS,CAAC,QAAS;QAClF;QACA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;oBAAE,SAAS,SAAS,UAAU;gBAAC,CAAC;YACrF,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI,CAAC,2BAA2B,EAAE,SAAS,MAAM,EAAE;QACxF;QACA,IAAI,SAAS,MAAM,KAAK,KACpB,OAAO;QACX,OAAO,SAAS,IAAI;IACxB;IACA,yCAAyC;IACzC,OAAO;QACH,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,MAAM,CAAC,UAAU,UAAY,QAAQ,QAAQ,UAAU;QACvD,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,QAAQ,CAAC,UAAU,UAAY,QAAQ,UAAU,UAAU;IAC/D;AACJ","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/services/apiClient.ts"],"sourcesContent":["// ۱. وارد کردن تابع createApiClient از پکیج جدیدی که ساختیم\r\nimport { createApiClient } from \"@my-app/api-client\";\r\n\r\n// ۲. تعریف یک تابع برای خواندن توکن احراز هویت\r\n// این تابع مختص اپلیکیشن شماست و می‌تواند در آینده پیچیده‌تر شود\r\nconst getToken = (): string | null => {\r\n  // در یک اپلیکیشن واقعی، توکن از localStorage، sessionStorage یا یک cookie خوانده می‌شود.\r\n  // برای تست، ما می‌توانیم توکن را به صورت ثابت برگردانیم.\r\n  // مطمئن شوید که این توکن معتبر و منقضی نشده باشد.\r\n  if (typeof window !== 'undefined') {\r\n    // مثال: return localStorage.getItem('authToken');\r\n  }\r\n  \r\n  // توکن نمونه شما:\r\n  return \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiI2NTI3MzA1ZS1kYWZiLTRjZjEtYmMyOC1kMTViN2I0ODhjYzUiLCJuYmYiOjE3NTYxOTk1MDMsImV4cCI6MTc2NjE5OTQwMywiaXNzIjoiWWFkYWtjaGkiLCJhdWQiOiJmcm9udC5sb3R0ZXN0LmlyIn0.cnraf4kqlf_imZuhFg6GXoZ3RCJcHIqELJo3vU6VbDPScochuCz1mvLDogc2bJAc32e4Khikd2G08CyTLcDKiQ\";\r\n};\r\n\r\n// ۳. ایجاد یک نمونه (instance) از کلاینت API با استفاده از متغیر محیطی\r\n//    ما از /api/ به عنوان baseUrl استفاده می‌کنیم تا درخواست‌ها به پروکسی Next.js ارسال شوند\r\nconst apiClient = createApiClient(\r\n  '/api', // این آدرس به rewrites در next.config.js اشاره می‌کند\r\n  getToken\r\n);\r\n\r\n// ۴. export کردن نمونه برای استفاده در سراسر اپلیکیشن\r\nexport default apiClient;"],"names":[],"mappings":"AAAA,4DAA4D;;;;;AAC5D;;AAEA,+CAA+C;AAC/C,iEAAiE;AACjE,MAAM,WAAW;IACf,yFAAyF;IACzF,yDAAyD;IACzD,kDAAkD;IAClD,IAAI,gBAAkB,aAAa;IACjC,kDAAkD;IACpD;IAEA,kBAAkB;IAClB,OAAO;AACT;AAEA,uEAAuE;AACvE,6FAA6F;AAC7F,MAAM,YAAY,IAAA,kMAAe,EAC/B,QACA;uCAIa","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/services/shopsService.ts"],"sourcesContent":["import apiClient from \"./apiClient\";\r\n\r\nexport interface Shop {\r\n  id: string;\r\n  name: string;\r\n  lastname: string;\r\n  shopTitle: string;\r\n  phoneNumber: string | null;\r\n  description: string;\r\n  website: string;\r\n  tell: string;\r\n  status: string;\r\n  registrationStatus: \"Confirmed\" | \"InProgress\" | \"Answered\" | \"Rejected\";\r\n  createDate: string;\r\n  updateDate: string;\r\n  logo: string | null;\r\n  isLogoConfirmed: boolean;\r\n  isShopTitleConfirmed: boolean;\r\n  isTellConfirmed: boolean;\r\n  businessLicense: string | null;\r\n  nationalCard: string | null;\r\n  behindNationalCard: string | null;\r\n  isBusinessLicenseConfirmed: boolean;\r\n  isNationalCardConfirmed: boolean;\r\n  isBehindNationalCardConfirmed: boolean;\r\n  isBanned?: boolean;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  pageSize: number;\r\n  totalCount: number;\r\n  items: T[];\r\n}\r\n\r\nexport type ShopConfirmationData = {\r\n  ShopId: string;\r\n  IsLogoConfirmed?: boolean;\r\n  IsShopTitleConfirmed?: boolean;\r\n  IsBusinessLicenseConfirmed?: boolean;\r\n  IsNationalCardConfirmed?: boolean;\r\n  IsBehindNationalCardConfirmed?: boolean;\r\n  IsTellConfirmed?: boolean;\r\n};\r\n\r\n/**\r\n * لیستی از فروشگاه‌ها را واکشی می‌کند.\r\n */\r\nexport const getShops = (\r\n  pageNumber: number, \r\n  pageSize: number\r\n): Promise<PaginatedResponse<Shop>> => {\r\n  return apiClient.get('A_Shop/GetShops', {\r\n    params: {\r\n      PageNumber: pageNumber,\r\n      PageSize: pageSize,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * اطلاعات یک فروشگاه خاص را واکشی می‌کند.\r\n */\r\nexport const getShopById = (shopId: string): Promise<Shop> => {\r\n  return apiClient.get('A_Shop/GetShopDetail', {\r\n    params: {\r\n      Id: shopId,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * وضعیت تایید مدارک یک فروشگاه را به‌روز می‌کند.\r\n */\r\nexport const confirmShopRegistration = (confirmationData: ShopConfirmationData): Promise<Shop> => {\r\n  const formData = new FormData();\r\n  Object.keys(confirmationData).forEach((key: any) => {\r\n    const value = confirmationData[key as keyof ShopConfirmationData];\r\n    if (value !== undefined) {\r\n      formData.append(key, String(value));\r\n    }\r\n  });\r\n  return apiClient.put('A_Shop/ShopConfirmRegistration', {\r\n    body: formData,\r\n  });\r\n};\r\n\r\n/**\r\n * وضعیت نهایی یک فروشگاه را به 'Confirmed' تغییر می‌دهد.\r\n * @param shopId شناسه فروشگاه\r\n * @returns یک Promise که به آبجکت به‌روز شده Shop حل می‌شود.\r\n */\r\nexport const confirmFinalShopStatus = (shopId: string): Promise<Shop> => {\r\n  return apiClient.put('A_Shop/ConfirmShop', {\r\n    params: {\r\n      ShopId: shopId,\r\n      Status: 'Confirmed',\r\n    }\r\n  });\r\n};"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAkDO,MAAM,WAAW,CACtB,YACA;IAEA,OAAO,0MAAS,CAAC,GAAG,CAAC,mBAAmB;QACtC,QAAQ;YACN,YAAY;YACZ,UAAU;QACZ;IACF;AACF;AAKO,MAAM,cAAc,CAAC;IAC1B,OAAO,0MAAS,CAAC,GAAG,CAAC,wBAAwB;QAC3C,QAAQ;YACN,IAAI;QACN;IACF;AACF;AAKO,MAAM,0BAA0B,CAAC;IACtC,MAAM,WAAW,IAAI;IACrB,OAAO,IAAI,CAAC,kBAAkB,OAAO,CAAC,CAAC;QACrC,MAAM,QAAQ,gBAAgB,CAAC,IAAkC;QACjE,IAAI,UAAU,WAAW;YACvB,SAAS,MAAM,CAAC,KAAK,OAAO;QAC9B;IACF;IACA,OAAO,0MAAS,CAAC,GAAG,CAAC,kCAAkC;QACrD,MAAM;IACR;AACF;AAOO,MAAM,yBAAyB,CAAC;IACrC,OAAO,0MAAS,CAAC,GAAG,CAAC,sBAAsB;QACzC,QAAQ;YACN,QAAQ;YACR,QAAQ;QACV;IACF;AACF","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\n// ۱. وارد کردن الگوهای مورد نیاز\nimport {\n  YadakchiAdminLayout,\n  ListPageLayout, // <-- الگوی ساده شده\n  Label,\n  type ColumnDefinition,\n} from \"@my-ds/design-system\";\n\nimport { getShops, type Shop } from \"../services/shopsService\";\n\nexport default function HomePage() {\n  const [shops, setShops] = useState<Shop[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const pathname = usePathname();\n  const renderLink = (href: string, children: React.ReactNode) => <Link href={href}>{children}</Link>;\n\n  useEffect(() => {\n    const fetchShops = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getShops(1, 30);\n        setShops(response.items);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"یک خطای ناشناخته رخ داد.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchShops();\n  }, []);\n\n  const shopColumns: ColumnDefinition<Shop>[] = [\n    { accessorKey: 'shopTitle', header: 'نام فروشگاه' },\n    { accessorKey: 'name', header: 'نام فروشنده', cell: (shop) => `${shop.name} ${shop.lastname}` },\n    { accessorKey: 'registrationStatus', header: 'وضعیت', cell: (shop) => <Label text={shop.registrationStatus} size=\"sm\" variant={shop.registrationStatus === 'Confirmed' ? 'primary' : 'error'} /> },\n  ];\n  \n  // ۲. آماده‌سازی props برای ListPageLayout (ساده شده)\n  const listPageProps = {\n    tableProps: {\n      columns: shopColumns,\n      data: shops,\n      emptyStateMessage: \"هیچ فروشگاهی یافت نشد.\",\n    },\n    isLoading: isLoading,\n    error: error,\n  };\n\n  return (\n    <YadakchiAdminLayout\n      currentPath={pathname}\n      renderLink={renderLink}\n    >\n      {/* ۳. استفاده از الگوی ساده شده */}\n      ادمین پنل\n    </YadakchiAdminLayout>\n  );\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;AAUA;AAbA;;;;;;;AAee,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qWAAQ,EAAS,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,qWAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qWAAQ,EAAgB;IAElD,MAAM,WAAW,IAAA,qSAAW;IAC5B,MAAM,aAAa,CAAC,MAAc,yBAA8B,kYAAC,2TAAI;YAAC,MAAM;sBAAO;;;;;;IAEnF,IAAA,sWAAS,EAAC;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,aAAa;gBACb,MAAM,WAAW,MAAM,IAAA,8MAAQ,EAAC,GAAG;gBACnC,SAAS,SAAS,KAAK;YACzB,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,aAAa;YACf;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,cAAwC;QAC5C;YAAE,aAAa;YAAa,QAAQ;QAAc;QAClD;YAAE,aAAa;YAAQ,QAAQ;YAAe,MAAM,CAAC,OAAS,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;QAAC;QAC9F;YAAE,aAAa;YAAsB,QAAQ;YAAS,MAAM,CAAC,qBAAS,kYAAC;oBAAM,MAAM,KAAK,kBAAkB;oBAAE,MAAK;oBAAK,SAAS,KAAK,kBAAkB,KAAK,cAAc,YAAY;;;;;;QAAY;KAClM;IAED,qDAAqD;IACrD,MAAM,gBAAgB;QACpB,YAAY;YACV,SAAS;YACT,MAAM;YACN,mBAAmB;QACrB;QACA,WAAW;QACX,OAAO;IACT;IAEA,qBACE,kYAAC;QACC,aAAa;QACb,YAAY;kBAEwB;;;;;;AAI1C","debugId":null}}]
}