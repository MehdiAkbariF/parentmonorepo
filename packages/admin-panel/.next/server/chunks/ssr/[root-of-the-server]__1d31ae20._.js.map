{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/api-client/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createApiClient = createApiClient;\n// ۲. تعریف تابع اصلی\n/**\n * یک کلاینت API قابل استفاده مجدد ایجاد می‌کند.\n * @param baseUrl آدرس پایه API (مثلاً 'https://api.example.com/api')\n * @param getToken (اختیاری) یک تابع که توکن احراز هویت را برمی‌گرداند\n */\nfunction createApiClient(baseUrl, getToken) {\n    // تابع داخلی و خصوصی برای ارسال درخواست‌ها\n    const request = async (method, endpoint, options = {}) => {\n        const { params, body, headers = {} } = options;\n        // ساخت query string از پارامترها\n        const query = params ? `?${new URLSearchParams(params).toString()}` : '';\n        const url = `${baseUrl}/${endpoint}${query}`;\n        // گرفتن توکن در لحظه ارسال درخواست\n        const token = getToken === null || getToken === void 0 ? void 0 : getToken();\n        const isFormData = body instanceof FormData;\n        // ساخت هدرهای نهایی\n        const finalHeaders = Object.assign(Object.assign(Object.assign({}, (isFormData ? {} : { 'Content-Type': 'application/json' })), (token ? { Authorization: `Bearer ${token}` } : {})), headers);\n        // ارسال درخواست با استفاده از fetch API\n        const response = await fetch(url, {\n            method,\n            headers: finalHeaders,\n            body: method !== 'GET' && body ? (isFormData ? body : JSON.stringify(body)) : undefined,\n        });\n        // مدیریت خطاها\n        if (!response.ok) {\n            // می‌توانید منطق پیچیده‌تری برای مدیریت خطاها اینجا اضافه کنید\n            const errorData = await response.json().catch(() => ({ message: response.statusText }));\n            throw new Error(errorData.message || `Request failed with status ${response.status}`);\n        }\n        // اگر پاسخ محتوا نداشت (مثلاً در 204 No Content)\n        if (response.status === 204) {\n            return null;\n        }\n        return response.json();\n    };\n    // ۳. برگرداندن آبجکتی با متدهای عمومی\n    return {\n        get: (endpoint, options) => request('GET', endpoint, options),\n        post: (endpoint, options) => request('POST', endpoint, options),\n        put: (endpoint, options) => request('PUT', endpoint, options),\n        delete: (endpoint, options) => request('DELETE', endpoint, options),\n    };\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG;AAC1B,qBAAqB;AACrB;;;;CAIC,GACD,SAAS,gBAAgB,OAAO,EAAE,QAAQ;IACtC,2CAA2C;IAC3C,MAAM,UAAU,OAAO,QAAQ,UAAU,UAAU,CAAC,CAAC;QACjD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG;QACvC,iCAAiC;QACjC,MAAM,QAAQ,SAAS,CAAC,CAAC,EAAE,IAAI,gBAAgB,QAAQ,QAAQ,IAAI,GAAG;QACtE,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,WAAW,OAAO;QAC5C,mCAAmC;QACnC,MAAM,QAAQ,aAAa,QAAQ,aAAa,KAAK,IAAI,KAAK,IAAI;QAClE,MAAM,aAAa,gBAAgB;QACnC,oBAAoB;QACpB,MAAM,eAAe,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAI,aAAa,CAAC,IAAI;YAAE,gBAAgB;QAAmB,IAAM,QAAQ;YAAE,eAAe,CAAC,OAAO,EAAE,OAAO;QAAC,IAAI,CAAC,IAAK;QACtL,wCAAwC;QACxC,MAAM,WAAW,MAAM,MAAM,KAAK;YAC9B;YACA,SAAS;YACT,MAAM,WAAW,SAAS,OAAQ,aAAa,OAAO,KAAK,SAAS,CAAC,QAAS;QAClF;QACA,eAAe;QACf,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,+DAA+D;YAC/D,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC;oBAAE,SAAS,SAAS,UAAU;gBAAC,CAAC;YACrF,MAAM,IAAI,MAAM,UAAU,OAAO,IAAI,CAAC,2BAA2B,EAAE,SAAS,MAAM,EAAE;QACxF;QACA,iDAAiD;QACjD,IAAI,SAAS,MAAM,KAAK,KAAK;YACzB,OAAO;QACX;QACA,OAAO,SAAS,IAAI;IACxB;IACA,sCAAsC;IACtC,OAAO;QACH,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,MAAM,CAAC,UAAU,UAAY,QAAQ,QAAQ,UAAU;QACvD,KAAK,CAAC,UAAU,UAAY,QAAQ,OAAO,UAAU;QACrD,QAAQ,CAAC,UAAU,UAAY,QAAQ,UAAU,UAAU;IAC/D;AACJ","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/services/apiClient.ts"],"sourcesContent":["// ۱. وارد کردن تابع createApiClient از پکیج جدیدی که ساختیم\r\nimport { createApiClient } from \"@my-app/api-client\";\r\n\r\n// ۲. تعریف یک تابع برای خواندن توکن احراز هویت\r\n// این تابع مختص اپلیکیشن شماست و می‌تواند در آینده پیچیده‌تر شود\r\nconst getToken = (): string | null => {\r\n  // در یک اپلیکیشن واقعی، توکن از localStorage، sessionStorage یا یک cookie خوانده می‌شود.\r\n  // برای تست، ما می‌توانیم توکن را به صورت ثابت برگردانیم.\r\n  // مطمئن شوید که این توکن معتبر و منقضی نشده باشد.\r\n  if (typeof window !== 'undefined') {\r\n    // مثال: return localStorage.getItem('authToken');\r\n  }\r\n  \r\n  // توکن نمونه شما:\r\n  return \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiI2NTI3MzA1ZS1kYWZiLTRjZjEtYmMyOC1kMTViN2I0ODhjYzUiLCJuYmYiOjE3NTYxOTk1MDMsImV4cCI6MTc2NjE5OTQwMywiaXNzIjoiWWFkYWtjaGkiLCJhdWQiOiJmcm9udC5sb3R0ZXN0LmlyIn0.cnraf4kqlf_imZuhFg6GXoZ3RCJcHIqELJo3vU6VbDPScochuCz1mvLDogc2bJAc32e4Khikd2G08CyTLcDKiQ\";\r\n};\r\n\r\n// ۳. ایجاد یک نمونه (instance) از کلاینت API با استفاده از متغیر محیطی\r\n//    ما از /api/ به عنوان baseUrl استفاده می‌کنیم تا درخواست‌ها به پروکسی Next.js ارسال شوند\r\nconst apiClient = createApiClient(\r\n  '/api', // این آدرس به rewrites در next.config.js اشاره می‌کند\r\n  getToken\r\n);\r\n\r\n// ۴. export کردن نمونه برای استفاده در سراسر اپلیکیشن\r\nexport default apiClient;"],"names":[],"mappings":"AAAA,4DAA4D;;;;;AAC5D;;AAEA,+CAA+C;AAC/C,iEAAiE;AACjE,MAAM,WAAW;IACf,yFAAyF;IACzF,yDAAyD;IACzD,kDAAkD;IAClD,IAAI,gBAAkB,aAAa;IACjC,kDAAkD;IACpD;IAEA,kBAAkB;IAClB,OAAO;AACT;AAEA,uEAAuE;AACvE,6FAA6F;AAC7F,MAAM,YAAY,IAAA,kMAAe,EAC/B,QACA;uCAIa","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Raven/Frontend-Dev/main-parent/packages/admin-panel/src/app/shops/%5Bid%5D/page.tsx"],"sourcesContent":["import apiClient from \"../../../services/apiClient\";\r\n\r\n// ✨ --- اینترفیس Shop با تمام فیلدهای لازم به‌روز شد ---\r\nexport interface Shop {\r\n  id: string;\r\n  isLegalPerson: boolean;\r\n  name: string;\r\n  lastname: string;\r\n  phoneNumber: string | null;\r\n  description: string;\r\n  website: string;\r\n  isLocalSale: boolean;\r\n  isOnlineSale: boolean;\r\n  cover: string | null;\r\n  shopVideo: string | null;\r\n  isAdvertised: boolean;\r\n  averageRate: number;\r\n  rates: number;\r\n  likes: number;\r\n  views: number;\r\n  status: \"Ok\" | \"Pending\" | \"Rejected\";\r\n  registrationStatus: \"Confirmed\" | \"InProgress\" | \"Answered\" | \"Rejected\";\r\n  logo: string | null;\r\n  shopTitle: string;\r\n  tell: string;\r\n  // ... می‌توانید بقیه فیلدهای مورد نیاز را هم اضافه کنید\r\n  updateDate: string; // برای مثال\r\n  createDate: string;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  pageSize: number;\r\n  totalCount: number;\r\n  items: T[];\r\n}\r\n\r\n/**\r\n * لیستی از فروشگاه‌ها را واکشی می‌کند.\r\n */\r\nexport const getShops = (\r\n  pageNumber: number, \r\n  pageSize: number\r\n): Promise<PaginatedResponse<Shop>> => {\r\n  return apiClient.get('A_Shop/GetShops', {\r\n    params: {\r\n      PageNumber: pageNumber,\r\n      PageSize: pageSize,\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * اطلاعات یک فروشگاه خاص را بر اساس شناسه (ID) واکشی می‌کند.\r\n */\r\nexport const getShopById = async (shopId: string): Promise<Shop> => {\r\n  const response: PaginatedResponse<Shop> = await apiClient.get('A_Shop/GetShops', {\r\n    params: {\r\n      Ids: shopId,\r\n      PageNumber: 1,\r\n      PageSize: 1,\r\n    }\r\n  });\r\n\r\n  if (response && response.items && response.items.length > 0) {\r\n    return response.items[0];\r\n  }\r\n\r\n  throw new Error(`فروشگاهی با شناسه ${shopId} یافت نشد.`);\r\n};\r\n\r\nexport default getShops"],"names":[],"mappings":";;;;;;;;AAAA;;AAyCO,MAAM,WAAW,CACtB,YACA;IAEA,OAAO,0MAAS,CAAC,GAAG,CAAC,mBAAmB;QACtC,QAAQ;YACN,YAAY;YACZ,UAAU;QACZ;IACF;AACF;AAKO,MAAM,cAAc,OAAO;IAChC,MAAM,WAAoC,MAAM,0MAAS,CAAC,GAAG,CAAC,mBAAmB;QAC/E,QAAQ;YACN,KAAK;YACL,YAAY;YACZ,UAAU;QACZ;IACF;IAEA,IAAI,YAAY,SAAS,KAAK,IAAI,SAAS,KAAK,CAAC,MAAM,GAAG,GAAG;QAC3D,OAAO,SAAS,KAAK,CAAC,EAAE;IAC1B;IAEA,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,OAAO,UAAU,CAAC;AACzD;uCAEe","debugId":null}}]
}