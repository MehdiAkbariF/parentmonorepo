import React, { useState, useEffect } from "react";
import { Label } from "../atoms/Label/Label";
import { FiHome } from "react-icons/fi";
import "../styles/index.scss";

export default {
  title: "Atoms/Label",
  component: Label,
};

export const AllSizesAndVariants = () => {
  const [theme, setTheme] = useState<"light" | "dark">("light");

  useEffect(() => {
    document.body.classList.remove("light", "dark");
    document.body.classList.add(theme);
    document.body.style.backgroundColor = getComputedStyle(document.body)
      .getPropertyValue("--color-bg-body");
  }, [theme]);

  const sizes = ["xs", "sm", "md", "lg", "xl", "2x", "3x", "4x"];
  const variants = ["primary", "secondary", "error", "disabled"];

  return (
    <div style={{ padding: "1rem" }}>
      <button
        onClick={() => setTheme(theme === "light" ? "dark" : "light")}
        style={{
          padding: "0.5rem 1rem",
          marginBottom: "1rem",
          cursor: "pointer",
          background: "var(--color-brand-primary)",
          color: "var(--color-text-on-brand)",
          border: "none",
          borderRadius: "4px",
        }}
      >
        Switch to {theme === "light" ? "Dark" : "Light"} Mode
      </button>

      <div style={{ display: "grid", gap: "1rem" }}>
        {sizes.map((size) => (
          <div key={size}>
            <h4
              style={{
                marginBottom: "0.5rem",
                color: "var(--color-text-primary)",
                fontWeight: 600
              }}
            >
              Size: {size}
            </h4>

            <div style={{ display: "flex", gap: "1rem", flexWrap: "wrap" }}>
              {variants.map((variant) => (
                <Label
                  key={`${size}-${variant}`}
                  text={`${variant} ${size}`}
                  variant={variant as any}
                  size={size as any}
                  icon={<FiHome />}
                />
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};
