import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { useState, useEffect } from "react";
import { Label } from "../atoms/Label/Label";
import { FiHome } from "react-icons/fi";
import "../styles/index.scss";
export default {
    title: "Atoms/Label",
    component: Label,
};
export const AllSizesAndVariants = () => {
    const [theme, setTheme] = useState("light");
    useEffect(() => {
        document.body.classList.remove("light", "dark");
        document.body.classList.add(theme);
        document.body.style.backgroundColor = getComputedStyle(document.body)
            .getPropertyValue("--color-bg-body");
    }, [theme]);
    const sizes = ["xs", "sm", "md", "lg", "xl", "2x", "3x", "4x"];
    const variants = ["primary", "secondary", "error", "disabled"];
    return (_jsxs("div", { style: { padding: "1rem" }, children: [_jsxs("button", { onClick: () => setTheme(theme === "light" ? "dark" : "light"), style: {
                    padding: "0.5rem 1rem",
                    marginBottom: "1rem",
                    cursor: "pointer",
                    background: "var(--color-brand-primary)",
                    color: "var(--color-text-on-brand)",
                    border: "none",
                    borderRadius: "4px",
                }, children: ["Switch to ", theme === "light" ? "Dark" : "Light", " Mode"] }), _jsx("div", { style: { display: "grid", gap: "1rem" }, children: sizes.map((size) => (_jsxs("div", { children: [_jsxs("h4", { style: {
                                marginBottom: "0.5rem",
                                color: "var(--color-text-primary)",
                                fontWeight: 600
                            }, children: ["Size: ", size] }), _jsx("div", { style: { display: "flex", gap: "1rem", flexWrap: "wrap" }, children: variants.map((variant) => (_jsx(Label, { text: `${variant} ${size}`, variant: variant, size: size, icon: _jsx(FiHome, {}) }, `${size}-${variant}`))) })] }, size))) })] }));
};
